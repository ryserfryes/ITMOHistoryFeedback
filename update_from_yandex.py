#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã
"""

import requests
import json
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (–Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å)
YANDEX_FORM_API_URL = "https://api.forms.yandex.ru/v1/forms/{FORM_ID}/responses"
API_TOKEN = "YOUR_API_TOKEN_HERE"  # –¢–æ–∫–µ–Ω –æ—Ç –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã
FORM_ID = "68713abe90fa7b9f66ab5c53"  # ID –≤–∞—à–µ–π —Ñ–æ—Ä–º—ã

def download_responses():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –∏–∑ –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã"""
    headers = {
        'Authorization': f'Bearer {API_TOKEN}',
        'Content-Type': 'application/json'
    }
    
    try:
        print("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã...")
        response = requests.get(YANDEX_FORM_API_URL.format(FORM_ID=FORM_ID), headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            return data
        else:
            print(f"–û—à–∏–±–∫–∞ API: {response.status_code}")
            print(response.text)
            return None
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        return None

def convert_to_current_format(yandex_data):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã –≤ —Ç–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç"""
    # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É API –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã
    converted_data = []
    
    if 'responses' in yandex_data:
        for response in yandex_data['responses']:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç [[–≤–æ–ø—Ä–æ—Å, –æ—Ç–≤–µ—Ç], ...]
            converted_response = []
            
            # –î–æ–±–∞–≤–ª—è–µ–º ID –∏ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
            converted_response.append(['ID', response.get('id', '')])
            converted_response.append(['–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è', response.get('created_at', '')])
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
            if 'answers' in response:
                for answer in response['answers']:
                    question = answer.get('question', {}).get('text', '')
                    value = answer.get('value', '')
                    converted_response.append([question, value])
            
            converted_data.append(converted_response)
    
    return converted_data

def save_data(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª"""
    os.makedirs('data', exist_ok=True)
    
    with open('data/fidbek po istorii.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    
    print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {len(data)} –æ—Ç–≤–µ—Ç–æ–≤")

def update_site():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–π—Ç"""
    print("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...")
    os.system('python generate_static.py')

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if API_TOKEN == "YOUR_API_TOKEN_HERE":
        print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API_TOKEN –≤ —Å–∫—Ä–∏–ø—Ç–µ")
        print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
        print("1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω API –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã")
        print("2. –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_API_TOKEN_HERE –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    yandex_data = download_responses()
    if not yandex_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    converted_data = convert_to_current_format(yandex_data)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    save_data(converted_data)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∞–π—Ç
    update_site()
    
    print("üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == '__main__':
    main()